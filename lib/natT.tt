
# A Church enconding of natural numbers that only works on values of type *.

natType = (|| (|| *. *). (|| *. *))

zero = (\(|| *. *). (\*. 0))
succ = (\natType. (\(|| *. *). (\*. (1 ((2 1) 0)))))

add = (\natType. (\natType. (\(|| *. *). (\*. ((3 1) ((2 1) 0))))))

# This will not unify as natType is of type *{1} and not *.
# mult = (\natType. (\natType. (((1 natType) (add 0)) zero)))

one = (succ zero)
two = (succ one)
three = (succ two)
four = (succ three)
five = (succ four)
six = (succ five)
seven = (succ six)
eight = (succ seven)
nine = (succ eight)


# Converts a natural number n to a function type the takes n unit types and
# returns a unit type. Demonstrates a dependently typed function that takes a
# value and returns a type.
natToUnitF = (\natType. ((0 (\*. (|| ut. 1))) ut))
