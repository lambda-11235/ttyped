
# The identity function of types of type *, as well as its type.
id = (\a : *. (\x : a. x))
idT = (@a : *. (@x : a. a))

const = (\a : *. (\x : a. (\b : *. (\y : b. x))))

pair = (\a : *. (\b : *. (\x : a. (\y : b.
  (\r : *. (\f : (@x : a. (@y : b. r)). ((f x) y)))))))
pairType = (\a : *. (\b : *. (@r : *. (@f : (@x : a. (@y : b. r)). r))))


botType = (@a : *. a)

not = (\a : *. (@x : a. botType))

unitType = idT
unit = id


boolType = (@r : *. (@x : r. (@y : r. r)))
false = (\r : *. (\x : r. (\y : r. x)))
true = (\r : *. (\x : r. (\y : r. y)))


sigmaType = (\a : *. (\P : (@x : a. *). (@r : *. (@f : (@x : a. (@y : (P x). r)). r))))

sigma = (\a : *. (\P : (@x : a. *). (\x : a. (\y : (P x).
  (\r : *. (\f : (@x : a. (@y : (P x). r)). ((f x) y)))))))

# A proof that sigma actually produces a value of.
sigmaProof = (\a : *. (\P : (@x : a. *). (\x : a. (\y : (P x).
 ((id ((sigmaType a) P)) ((((sigma a) P) x) y))))))
