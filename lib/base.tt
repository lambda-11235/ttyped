
# The identity function of types of type *, as well as its type.
id = (\*. (\0. 0))
idT = (@*. (@0. 1))

const = (\*. (\0. (\*. (\0. 2))))

pair = (\*. (\*. (\1. (\1. (\*. (\(@4. (@4. 2)). ((0 3) 2)))))))
pairType = (\*. (\*. (@*. (@(@2. (@2. 2)). 1))))


botType = (@*. 0)

not = (\*. (@0. botType))

unitType = idT
unit = id


boolType = (@*. (@0. (@1. 2)))
true = (\*. (\0. (\1. 0)))
false = (\*. (\0. (\1. 1)))


sigmaType = (\*. (\(@0. *). (@*. (@(@2. (@(2 0). 2)). 1))))

sigma = (\*. (\(@0. *). (\1. (\(1 0).
  (\*. (\(@4. (@(4 0). 2)). ((0 3) 2)))))))


# The identity type for types.
# To use it correctly you must wrap it in a closure. e.g.
#
# ((((\(@*. (@*. *)).    # I
#    (\(@*. ((1 0) 0)).  # refl
#    (\(@*. (@*. (@((3 1) 0). ((pairType (@2. 2)) (@1. 3))))).  #Ielim
#    <body>
# ))) I) refl) (\*. (\*. (id ((I 1) 0)))))
#
# Otherwise alternate definitions for I besides refl could be used.
I = (\*. (\*. ((pairType (@1. 1)) (@0. 2))))
refl = (\*. ((((pair (@0. 1)) (@0. 1)) (\0. 0)) (\0. 0)))
